"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.zeEnableSnapshotOnPages = void 0;
const get_application_configuration_1 = require("../edge-requests/get-application-configuration");
const logging_1 = require("../logging");
const ze_http_request_1 = require("../http/ze-http-request");
const errors_1 = require("../errors");
async function zeEnableSnapshotOnPages({ pluginOptions: { application_uid }, envs_jwt, pages_url, }) {
    (0, logging_1.ze_log)('Enabling snapshot on cloudflare pages');
    (0, logging_1.ze_log)(`Uploading envs to Zephyr, for ${application_uid}`);
    const type = 'pages';
    const json = JSON.stringify(Object.assign(Object.assign({}, envs_jwt), { pages_url }));
    const { EDGE_URL, jwt } = await (0, get_application_configuration_1.getApplicationConfiguration)({
        application_uid,
    });
    const [ok, cause] = await ze_http_request_1.ZeHttpRequest.from({
        path: '/upload',
        base: EDGE_URL,
        query: { type },
    }, {
        method: 'POST',
        headers: {
            'Content-Length': Buffer.byteLength(json),
            'Content-Type': 'application/json; charset=utf-8',
            can_write_jwt: jwt,
        },
    }, json);
    if (!ok) {
        throw new errors_1.ZephyrError(errors_1.ZeErrors.ERR_DEPLOY_LOCAL_BUILD, { cause });
    }
    (0, logging_1.ze_log)('Build successfully deployed.');
}
exports.zeEnableSnapshotOnPages = zeEnableSnapshotOnPages;
//# sourceMappingURL=ze-enable-snapshot-on-pages.js.map
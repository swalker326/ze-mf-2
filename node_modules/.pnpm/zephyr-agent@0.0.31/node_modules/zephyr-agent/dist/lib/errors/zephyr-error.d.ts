import { ZeErrorCode, type ZeErrorCodes, type ZeErrorKeys, ZeErrors, ZeErrorType } from './codes';
import { FindTemplates } from 'zephyr-edge-contract';
/** Options to construct {@linkcode ZephyrError}. */
export type ZephyrErrorOpts<T extends ZeErrorType> = {
    cause?: unknown;
    data?: Record<string, unknown>;
} & Record<FindTemplates<T['message']>, string | number | boolean>;
export declare const docsUrl = "https://docs.zephyr-cloud.io/errors";
export declare const discordUrl = "https://zephyr-cloud.io/discord";
/**
 * ZephyrError is the base class for every error thrown by our builder plugins.
 *
 * Some messages have templates that mus be replaced with the `data` object. Use `{{
 * example }}` or `{{ example = value }}` to have a default value
 *
 * It's a subclass of Error, so it can be used in try/catch blocks.
 */
export declare class ZephyrError<K extends ZeErrorKeys, T extends (typeof ZeErrors)[K] = (typeof ZeErrors)[K]> extends Error {
    readonly code: ZeErrorCode<K>;
    /** Additional data to be used in the error message */
    data?: Record<string, unknown>;
    /** Data used when templating the message */
    readonly template?: Omit<ZephyrErrorOpts<T>, 'cause' | 'data'>;
    /**
     * Indicates the specific original cause of the error.
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause
     */
    readonly cause?: unknown;
    /**
     * Returns {@linkcode cause} if it's a `ZephyrError`, otherwise creates a new
     * `ZephyrError` for the provided type.
     */
    constructor(type: T, opts?: ZephyrErrorOpts<T>);
    /** Checks if the given error is a ZephyrError and optionally matches the given code. */
    static is<K extends ZeErrorKeys>(err: unknown, codeOrType?: (typeof ZeErrors)[K]): err is ZephyrError<K>;
    /** Formats a Zephyr error code. */
    static toZeCode<K extends ZeErrorKeys>({ id, kind }: (typeof ZeErrors)[K]): `ZE${{
        readonly unknown: "00";
        readonly build: "10";
        readonly deploy: "20";
        readonly browser: "30";
        readonly config: "40";
    }[{
        readonly ERR_UNKNOWN: {
            readonly id: "000";
            readonly message: "\nUnknown error: {{ message }}\n\n";
            readonly kind: "unknown";
        };
        readonly ERR_PACKAGE_JSON_NOT_FOUND: {
            readonly id: "010";
            readonly message: "package.json not found";
            readonly kind: "build";
        };
        readonly ERR_PACKAGE_JSON_NOT_VALID: {
            readonly id: "011";
            readonly message: "Package.json is not in a valid json format.";
            readonly kind: "build";
        };
        readonly ERR_WEBPACK_CONFIG: {
            readonly id: "012";
            readonly message: "Webpack config error.";
            readonly kind: "build";
        };
        readonly ERR_PACKAGE_JSON_MUST_HAVE_NAME_VERSION: {
            readonly id: "013";
            readonly message: "Zephyr need package.json to have name and version field to map your application configuration in deployment. Please ensure these fields exists in your package.json.";
            readonly kind: "build";
        };
        readonly ERR_GIT_REMOTE_ORIGIN: {
            readonly id: "014";
            readonly message: "\nCould not detect a git remote called 'origin'. This is required for Zephyr to work properly.\n\nPlease set the git remote origin by running the following command:\n\n```sh\ngit init\ngit remote add origin <url>\n```\n";
            readonly kind: "build";
        };
        readonly ERR_NO_GIT_USERNAME_EMAIL: {
            readonly id: "015";
            readonly message: "\nGit username or email is not configured:\n- please set valid 'git config user.name' and 'git config user.email'\n- or provide ZE_USER_TOKEN as environment variable\n";
            readonly kind: "build";
        };
        readonly ERR_NO_GIT_INFO: {
            readonly id: "016";
            readonly message: "\n\nFailed to load git information:\n\n{{ message }}\n\n";
            readonly kind: "build";
        };
        readonly ERR_MISSING_APPLICATION_UID: {
            readonly id: "017";
            readonly message: "`application_uid` missing.";
            readonly kind: "build";
        };
        readonly ERR_AUTH_ERROR: {
            readonly id: "018";
            readonly message: "\nFailed to authenticate with Zephyr.\n\nPlease make sure you have a valid Zephyr account and you are logged in.\n\n{{ message }}\n";
            readonly kind: "build";
        };
        readonly ERR_GET_BUILD_ID: {
            readonly id: "019";
            readonly message: "\nCould not generate Build ID. Ensure you meet the following requirements:\n\n1. Your Zephyr Account ({{ username }}) has write access to {{ application_uid }}\n2. You own the repository or is a collaborator with write access.\n3. This repository has commit history and has a proper git remote origin url.\n\nWhen trying out public examples, make sure to fork the repository to your account so you can have write access.\n\n";
            readonly kind: "build";
        };
        /**
         * Parses a Zephyr error code into a ZeErrorType.
         *
         * Returns {@linkcode ZeErrors.ERR_UNKNOWN} if the code could not be resolved.
         */
        readonly ERR_INITIALIZE_ZEPHYR_AGENT: {
            readonly id: "020";
            readonly message: "Could not initialize Zephyr Agent.";
            readonly kind: "build";
        };
        readonly ERR_UNABLE_CREATE_DIST_FOLDER: {
            readonly id: "021";
            readonly message: "Error creating dist folder.";
            readonly kind: "build";
        };
        readonly ERR_AUTH_FORBIDDEN_ERROR: {
            readonly id: "022";
            readonly message: "\nUser not allowed to access the requested resource.\n\nPlease make sure you are logged in with the correct Zephyr account.\n\n{{ message }}\n";
            readonly kind: "build";
        };
        readonly ERR_ASSETS_NOT_FOUND: {
            readonly id: "010";
            readonly message: "Assets not found.";
            readonly kind: "deploy";
        };
        readonly ERR_ASSETS_NOT_FOUND_IN_SNAPSHOT: {
            readonly id: "011";
            readonly message: "Assets not found in snapshot.";
            readonly kind: "deploy";
        };
        readonly ERR_DEPLOY_MISSING_APPLICATION_UID: {
            readonly id: "012";
            readonly message: "`application_uid` is required.";
            readonly kind: "deploy";
        };
        readonly ERR_MISSING_FILE_HASH: {
            readonly id: "013";
            readonly message: "Missing file hash.";
            readonly kind: "deploy";
        };
        readonly ERR_LOAD_APP_CONFIG: {
            readonly id: "014";
            readonly message: "\n\nFailed to load Application Configuration for {{ application_uid }}.\n\nTry to remove ~/.zephyr folder and try again.\n\n    ";
            readonly kind: "deploy";
        };
        readonly ERR_NOT_RECEIVE_ENVS_FROM_BUILD_STATS: {
            readonly id: "016";
            readonly message: "Did not receive envs from build stats upload.";
            readonly kind: "deploy";
        };
        readonly ERR_FAILED_UPLOAD: {
            readonly id: "017";
            readonly message: "\n\nCould not upload {{ type }} to your Edge Provider. This error will affect your tags and environments and it might fail deployments to custom domains.\n\nPlease check your network connection and try again.\n\n    ";
            readonly kind: "deploy";
        };
        readonly ERR_SNAPSHOT_UPLOADS_NO_RESULTS: {
            readonly id: "019";
            readonly message: "Snapshot uploads gave no results.";
            readonly kind: "deploy";
        };
        readonly ERR_GET_APPLICATION_HASH_LIST: {
            readonly id: "020";
            readonly message: "Failed to get application hash list.";
            readonly kind: "deploy";
        };
        readonly ERR_SNAPSHOT_ID_NOT_FOUND: {
            readonly id: "022";
            readonly message: "`snapshot_id` not found.";
            readonly kind: "deploy";
        };
        readonly ERR_SNAPSHOT_NOT_FOUND: {
            readonly id: "023";
            readonly message: "Snapshot not found.";
            readonly kind: "deploy";
        };
        readonly ERR_DEPLOY_LOCAL_BUILD: {
            readonly id: "024";
            readonly message: "Failed to deploy local build.";
            readonly kind: "deploy";
        };
        readonly ERR_WRANGLER_DEPENDENCY: {
            readonly id: "025";
            readonly message: "Wrangler dependency is needed for Cloudflare deployment. Please install dependencies without --no-optional flag.";
            readonly kind: "deploy";
        };
        readonly ERR_CONVERT_GRAPH_TO_DASHBOARD: {
            readonly id: "026";
            readonly message: "\nFailed to convert federation configuration to needed information. We are reading your Module Federation configuration to understand your shared dependencies:\n\n- host application's name\n- remote application's name\n- shared dependencies.\n\nPlease refer to the official Module Federation guide https://module-federation.io/configure/index.html to make sure your have required inputs.\n";
            readonly kind: "browser";
        };
        readonly ERR_UPLOAD_TO_CLOUDFLARE_PAGES: {
            readonly id: "027";
            readonly message: "Error upload to Cloudflare pages.";
            readonly kind: "deploy";
        };
        readonly ERR_USER_IDENTITY: {
            readonly id: "036";
            readonly message: "\nGit username or email is not configured\n  - please set valid 'git config user.name' and 'git config user.email'\n  - or provide ZE_USER_TOKEN as environment variable\n";
            readonly kind: "deploy";
        };
        readonly ERR_TLS_CERT_ALTNAME_INVALID: {
            readonly id: "034";
            readonly message: "You domain's TLS Certificate is invalid. Have you updated your domain settings with your Registrar?";
            readonly kind: "deploy";
        };
        readonly ERR_HTTP_ERROR: {
            readonly id: "035";
            readonly message: "\n\nHTTP request for {{ method }} {{ url }} failed with status code {{ status }}.\n\nPlease check your network connection and try again.\n\n{{ content }}\n\n";
            readonly kind: "config";
        };
        readonly ERR_NO_WRANGLER: {
            readonly id: "028";
            readonly message: "Wrangler is not installed. It's needed for Cloudflare deployment. Please install dependencies without --no-optional flag.";
            readonly kind: "build";
        };
        readonly ERR_CREATE_DIST_FOLDER: {
            readonly id: "029";
            readonly message: "Error on creating dist folder. Zephyr is unable to create dist folder for your application's configuration.";
            readonly kind: "build";
        };
        readonly ERR_NO_RESPONSE_FOR_APP_CONFIG: {
            readonly id: "030";
            readonly message: "Failed to load application configuration.";
            readonly kind: "build";
        };
        readonly ERR_NO_JWT: {
            readonly id: "031";
            readonly message: "You don't have valid JWT token. Try to log out from the dashboard and log in again. https://app.zephyr-cloud.io";
            readonly kind: "build";
        };
        readonly ERR_JWT_INVALID: {
            readonly id: "032";
            readonly message: "Your JWT token is invalid. Try to log out from the dashboard and log in again. https://app.zephyr-cloud.io";
            readonly kind: "build";
        };
        readonly ERR_WEBSOCKET_CONNECTION: {
            readonly id: "034";
            readonly message: "Websocket connection error during login.";
            readonly kind: "build";
        };
        readonly ERR_GET_APP_CONFIG: {
            readonly id: "035";
            readonly message: "Error when getting application configuration from API. Could not find application configuration. Please try again after removing ~/.zephyr folder.";
            readonly kind: "build";
        };
        readonly ERR_GIT_COMMIT_HASH: {
            readonly id: "036";
            readonly message: "Failed to get git commit hash. Can you make sure this git repository has commit history?";
            readonly kind: "build";
        };
        readonly ERR_RESOLVE_REMOTES: {
            readonly id: "001";
            readonly message: "\nPlease build {{ appUid }} with Zephyr first or add as Unmanaged applications.\n\nNote: you can read application uid as follows:\n- {{ appName }} - project.json 'name' field of remote application\n- {{ projectName }} - git repository name\n- {{ orgName }} - git organization name\n\n";
            readonly kind: "config";
        };
        readonly ERR_CANNOT_RESOLVE_APP_NAME_WITH_VERSION: {
            readonly id: "003";
            readonly message: "\nIs the remote application being built? We are not able to find your remote application based on application_uid and remote name in configuration.\nNote that we typically map your remote based on below values\n\n- git username\n- git repository name\n- name in package.json\n- name in micro-frontend configuration.\n\nWe have a complete checklist for Micro-Frontend application configuration here: https://docs.zephyr-cloud.io/how-to/mf-guide\n      ";
            readonly kind: "config";
        };
    }[K]["kind"]]}${{
        readonly ERR_UNKNOWN: {
            readonly id: "000";
            readonly message: "\nUnknown error: {{ message }}\n\n";
            readonly kind: "unknown";
        };
        readonly ERR_PACKAGE_JSON_NOT_FOUND: {
            readonly id: "010";
            readonly message: "package.json not found";
            readonly kind: "build";
        };
        readonly ERR_PACKAGE_JSON_NOT_VALID: {
            readonly id: "011";
            readonly message: "Package.json is not in a valid json format.";
            readonly kind: "build";
        };
        readonly ERR_WEBPACK_CONFIG: {
            readonly id: "012";
            readonly message: "Webpack config error.";
            readonly kind: "build";
        };
        readonly ERR_PACKAGE_JSON_MUST_HAVE_NAME_VERSION: {
            readonly id: "013";
            readonly message: "Zephyr need package.json to have name and version field to map your application configuration in deployment. Please ensure these fields exists in your package.json.";
            readonly kind: "build";
        };
        readonly ERR_GIT_REMOTE_ORIGIN: {
            readonly id: "014";
            readonly message: "\nCould not detect a git remote called 'origin'. This is required for Zephyr to work properly.\n\nPlease set the git remote origin by running the following command:\n\n```sh\ngit init\ngit remote add origin <url>\n```\n";
            readonly kind: "build";
        };
        readonly ERR_NO_GIT_USERNAME_EMAIL: {
            readonly id: "015";
            readonly message: "\nGit username or email is not configured:\n- please set valid 'git config user.name' and 'git config user.email'\n- or provide ZE_USER_TOKEN as environment variable\n";
            readonly kind: "build";
        };
        readonly ERR_NO_GIT_INFO: {
            readonly id: "016";
            readonly message: "\n\nFailed to load git information:\n\n{{ message }}\n\n";
            readonly kind: "build";
        };
        readonly ERR_MISSING_APPLICATION_UID: {
            readonly id: "017";
            readonly message: "`application_uid` missing.";
            readonly kind: "build";
        };
        readonly ERR_AUTH_ERROR: {
            readonly id: "018";
            readonly message: "\nFailed to authenticate with Zephyr.\n\nPlease make sure you have a valid Zephyr account and you are logged in.\n\n{{ message }}\n";
            readonly kind: "build";
        };
        readonly ERR_GET_BUILD_ID: {
            readonly id: "019";
            readonly message: "\nCould not generate Build ID. Ensure you meet the following requirements:\n\n1. Your Zephyr Account ({{ username }}) has write access to {{ application_uid }}\n2. You own the repository or is a collaborator with write access.\n3. This repository has commit history and has a proper git remote origin url.\n\nWhen trying out public examples, make sure to fork the repository to your account so you can have write access.\n\n";
            readonly kind: "build";
        };
        /**
         * Parses a Zephyr error code into a ZeErrorType.
         *
         * Returns {@linkcode ZeErrors.ERR_UNKNOWN} if the code could not be resolved.
         */
        readonly ERR_INITIALIZE_ZEPHYR_AGENT: {
            readonly id: "020";
            readonly message: "Could not initialize Zephyr Agent.";
            readonly kind: "build";
        };
        readonly ERR_UNABLE_CREATE_DIST_FOLDER: {
            readonly id: "021";
            readonly message: "Error creating dist folder.";
            readonly kind: "build";
        };
        readonly ERR_AUTH_FORBIDDEN_ERROR: {
            readonly id: "022";
            readonly message: "\nUser not allowed to access the requested resource.\n\nPlease make sure you are logged in with the correct Zephyr account.\n\n{{ message }}\n";
            readonly kind: "build";
        };
        readonly ERR_ASSETS_NOT_FOUND: {
            readonly id: "010";
            readonly message: "Assets not found.";
            readonly kind: "deploy";
        };
        readonly ERR_ASSETS_NOT_FOUND_IN_SNAPSHOT: {
            readonly id: "011";
            readonly message: "Assets not found in snapshot.";
            readonly kind: "deploy";
        };
        readonly ERR_DEPLOY_MISSING_APPLICATION_UID: {
            readonly id: "012";
            readonly message: "`application_uid` is required.";
            readonly kind: "deploy";
        };
        readonly ERR_MISSING_FILE_HASH: {
            readonly id: "013";
            readonly message: "Missing file hash.";
            readonly kind: "deploy";
        };
        readonly ERR_LOAD_APP_CONFIG: {
            readonly id: "014";
            readonly message: "\n\nFailed to load Application Configuration for {{ application_uid }}.\n\nTry to remove ~/.zephyr folder and try again.\n\n    ";
            readonly kind: "deploy";
        };
        readonly ERR_NOT_RECEIVE_ENVS_FROM_BUILD_STATS: {
            readonly id: "016";
            readonly message: "Did not receive envs from build stats upload.";
            readonly kind: "deploy";
        };
        readonly ERR_FAILED_UPLOAD: {
            readonly id: "017";
            readonly message: "\n\nCould not upload {{ type }} to your Edge Provider. This error will affect your tags and environments and it might fail deployments to custom domains.\n\nPlease check your network connection and try again.\n\n    ";
            readonly kind: "deploy";
        };
        readonly ERR_SNAPSHOT_UPLOADS_NO_RESULTS: {
            readonly id: "019";
            readonly message: "Snapshot uploads gave no results.";
            readonly kind: "deploy";
        };
        readonly ERR_GET_APPLICATION_HASH_LIST: {
            readonly id: "020";
            readonly message: "Failed to get application hash list.";
            readonly kind: "deploy";
        };
        readonly ERR_SNAPSHOT_ID_NOT_FOUND: {
            readonly id: "022";
            readonly message: "`snapshot_id` not found.";
            readonly kind: "deploy";
        };
        readonly ERR_SNAPSHOT_NOT_FOUND: {
            readonly id: "023";
            readonly message: "Snapshot not found.";
            readonly kind: "deploy";
        };
        readonly ERR_DEPLOY_LOCAL_BUILD: {
            readonly id: "024";
            readonly message: "Failed to deploy local build.";
            readonly kind: "deploy";
        };
        readonly ERR_WRANGLER_DEPENDENCY: {
            readonly id: "025";
            readonly message: "Wrangler dependency is needed for Cloudflare deployment. Please install dependencies without --no-optional flag.";
            readonly kind: "deploy";
        };
        readonly ERR_CONVERT_GRAPH_TO_DASHBOARD: {
            readonly id: "026";
            readonly message: "\nFailed to convert federation configuration to needed information. We are reading your Module Federation configuration to understand your shared dependencies:\n\n- host application's name\n- remote application's name\n- shared dependencies.\n\nPlease refer to the official Module Federation guide https://module-federation.io/configure/index.html to make sure your have required inputs.\n";
            readonly kind: "browser";
        };
        readonly ERR_UPLOAD_TO_CLOUDFLARE_PAGES: {
            readonly id: "027";
            readonly message: "Error upload to Cloudflare pages.";
            readonly kind: "deploy";
        };
        readonly ERR_USER_IDENTITY: {
            readonly id: "036";
            readonly message: "\nGit username or email is not configured\n  - please set valid 'git config user.name' and 'git config user.email'\n  - or provide ZE_USER_TOKEN as environment variable\n";
            readonly kind: "deploy";
        };
        readonly ERR_TLS_CERT_ALTNAME_INVALID: {
            readonly id: "034";
            readonly message: "You domain's TLS Certificate is invalid. Have you updated your domain settings with your Registrar?";
            readonly kind: "deploy";
        };
        readonly ERR_HTTP_ERROR: {
            readonly id: "035";
            readonly message: "\n\nHTTP request for {{ method }} {{ url }} failed with status code {{ status }}.\n\nPlease check your network connection and try again.\n\n{{ content }}\n\n";
            readonly kind: "config";
        };
        readonly ERR_NO_WRANGLER: {
            readonly id: "028";
            readonly message: "Wrangler is not installed. It's needed for Cloudflare deployment. Please install dependencies without --no-optional flag.";
            readonly kind: "build";
        };
        readonly ERR_CREATE_DIST_FOLDER: {
            readonly id: "029";
            readonly message: "Error on creating dist folder. Zephyr is unable to create dist folder for your application's configuration.";
            readonly kind: "build";
        };
        readonly ERR_NO_RESPONSE_FOR_APP_CONFIG: {
            readonly id: "030";
            readonly message: "Failed to load application configuration.";
            readonly kind: "build";
        };
        readonly ERR_NO_JWT: {
            readonly id: "031";
            readonly message: "You don't have valid JWT token. Try to log out from the dashboard and log in again. https://app.zephyr-cloud.io";
            readonly kind: "build";
        };
        readonly ERR_JWT_INVALID: {
            readonly id: "032";
            readonly message: "Your JWT token is invalid. Try to log out from the dashboard and log in again. https://app.zephyr-cloud.io";
            readonly kind: "build";
        };
        readonly ERR_WEBSOCKET_CONNECTION: {
            readonly id: "034";
            readonly message: "Websocket connection error during login.";
            readonly kind: "build";
        };
        readonly ERR_GET_APP_CONFIG: {
            readonly id: "035";
            readonly message: "Error when getting application configuration from API. Could not find application configuration. Please try again after removing ~/.zephyr folder.";
            readonly kind: "build";
        };
        readonly ERR_GIT_COMMIT_HASH: {
            readonly id: "036";
            readonly message: "Failed to get git commit hash. Can you make sure this git repository has commit history?";
            readonly kind: "build";
        };
        readonly ERR_RESOLVE_REMOTES: {
            readonly id: "001";
            readonly message: "\nPlease build {{ appUid }} with Zephyr first or add as Unmanaged applications.\n\nNote: you can read application uid as follows:\n- {{ appName }} - project.json 'name' field of remote application\n- {{ projectName }} - git repository name\n- {{ orgName }} - git organization name\n\n";
            readonly kind: "config";
        };
        readonly ERR_CANNOT_RESOLVE_APP_NAME_WITH_VERSION: {
            readonly id: "003";
            readonly message: "\nIs the remote application being built? We are not able to find your remote application based on application_uid and remote name in configuration.\nNote that we typically map your remote based on below values\n\n- git username\n- git repository name\n- name in package.json\n- name in micro-frontend configuration.\n\nWe have a complete checklist for Micro-Frontend application configuration here: https://docs.zephyr-cloud.io/how-to/mf-guide\n      ";
            readonly kind: "config";
        };
    }[K]["id"]}`;
    /**
     * Parses a Zephyr error code into a ZeErrorType.
     *
     * Returns {@linkcode ZeErrors.ERR_UNKNOWN} if the code could not be resolved.
     */
    static fromZeCode(code: ZeErrorCodes): ZeErrorType;
    static format(error: unknown): string;
}

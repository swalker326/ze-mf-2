"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMfRuntimeCode = void 0;
function createMfRuntimeCode(deps) {
    // prepare delegate function string template
    const fnReplace = delegate_module_template.toString();
    const strStart = new RegExp(/^function[\W\S]+return new Promise/);
    const strNewStart = `promise new Promise`;
    const strEnd = new RegExp(/;[^)}]+}$/);
    const promiseNewPromise = fnReplace.replace(strStart, strNewStart).replace(strEnd, '');
    const { application_uid, remote_entry_url, default_url, name, library_type } = deps;
    return promiseNewPromise
        .replace('__APPLICATION_UID__', application_uid)
        .replace('__REMOTE_ENTRY_URL__', remote_entry_url)
        .replace('__REMOTE_NAME__', name)
        .replace('__DEFAULT_URL__', default_url)
        .replace('__LIBRARY_TYPE__', library_type);
}
exports.createMfRuntimeCode = createMfRuntimeCode;
function delegate_module_template() {
    return new Promise((resolve, reject) => {
        const _windows = typeof window !== 'undefined' ? window : globalThis;
        const sessionEdgeURL = _windows.sessionStorage.getItem('__APPLICATION_UID__');
        const remote_entry_url = '__REMOTE_ENTRY_URL__';
        const library_type = '__LIBRARY_TYPE__';
        let edgeUrl = sessionEdgeURL ?? remote_entry_url;
        let remote_name = '__REMOTE_NAME__';
        if (edgeUrl.indexOf('@') !== -1) {
            [remote_name, edgeUrl] = edgeUrl.split('@');
        }
        const resolve_entry = [
            fetch(edgeUrl, { method: 'HEAD' })
                .then(() => edgeUrl)
                .catch(() => false),
        ];
        Promise.race(resolve_entry)
            .then((remoteUrl) => {
            if (typeof remoteUrl !== 'string')
                return;
            const _win = _windows;
            if (typeof _win[remote_name] !== 'undefined') {
                return resolve(_win[remote_name]);
            }
            if (typeof __webpack_require__ !== 'undefined' &&
                typeof __webpack_require__.l === 'function' &&
                // @ts-expect-error - library_type is inherited enum type instead of string
                library_type !== 'module') {
                __webpack_require__.l(remoteUrl, () => {
                    resolve(_win[remote_name]);
                }, remote_name, remote_name);
                return;
            }
            return new Function(`return import("${remoteUrl}")`)()
                .then((mod) => {
                if (typeof _win[remote_name] !== 'undefined') {
                    return resolve(_win[remote_name]);
                }
                return resolve(mod);
            })
                .catch((err) => reject(err));
        })
            .catch((err) => {
            console.error(`Zephyr: error loading remote entry ${remote_entry_url}`, err);
        });
    });
}
//# sourceMappingURL=create-mf-runtime-code.js.map
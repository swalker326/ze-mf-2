"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildWebpackAssetMap = void 0;
const zephyr_agent_1 = require("zephyr-agent");
function getAssetType(asset) {
    return asset.constructor.name;
}
function extractBuffer(asset) {
    const className = getAssetType(asset);
    switch (className) {
        case 'CachedSource':
        case 'CompatSource':
        case 'RawSource':
        case 'ConcatSource':
        case 'SourceMapSource':
            return asset?.buffer && asset.buffer();
        case 'ReplaceSource':
            return asset.source();
        default:
            return void 0;
    }
}
async function buildWebpackAssetMap(assets, props) {
    const { wait_for_index_html } = props;
    (0, zephyr_agent_1.ze_log)('Building assets map from webpack assets.');
    const assetsMap = (0, zephyr_agent_1.buildAssetsMap)(assets, extractBuffer, getAssetType);
    if (wait_for_index_html) {
        (0, zephyr_agent_1.ze_log)('Assets map built. Checking for index.html waiter.');
        const index_html_content = await (0, zephyr_agent_1.onIndexHtmlResolved)();
        const index_html_asset = (0, zephyr_agent_1.zeBuildAssets)({
            filepath: 'index.html',
            content: index_html_content,
        });
        assetsMap[index_html_asset.hash] = index_html_asset;
        (0, zephyr_agent_1.ze_log)('Index.html added to assets map.');
    }
    return assetsMap;
}
exports.buildWebpackAssetMap = buildWebpackAssetMap;
//# sourceMappingURL=build-webpack-assets-map.js.map